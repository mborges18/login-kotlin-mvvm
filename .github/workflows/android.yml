name: CI - Generated APK AAB (Create Artifact To Github Action)

env:
  # The name of the main module repository
  main_project_module: app

  # The name of the Play Store
  playstore_name: Frogobox ID

on:

  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "develop", "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  unit-tests:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Run gradle tests
        run: ./gradlew test
        
  android-tests:
    runs-on: ubuntu-20.04

    needs: unit-tests
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Setup JAVA 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17
      - name: Cache Gradle and wrapper
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

      - name: Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          script: ./gradlew connectedAndroidTest

      # Run Build Project
      #- name: Build gradle project
      #  run: ./gradlew build

      # Create APK Debug
      #- name: Build apk debug project (APK) - ${{ env.main_project_module }} module
      #  run: ./gradlew assembleDebug

      # Create APK Release
      #- name: Build apk release project (APK) - ${{ env.main_project_module }} module
      #  run: ./gradlew assemble

      # Create Bundle AAB Release
      # Noted for main module build [main_project_module]:bundleRelease
      #- name: Build app bundle release (AAB) - ${{ env.main_project_module }} module
      #  run: ./gradlew ${{ env.main_project_module }}:bundleRelease

      # Upload Artifact Build
      # Noted For Output [main_project_module]/build/outputs/apk/debug/
      #- name: Upload APK Debug - ${{ env.repository_name }}
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) debug generated
      #    path: ${{ env.main_project_module }}/build/outputs/apk/debug/

      # Noted For Output [main_project_module]/build/outputs/apk/release/
      #- name: Upload APK Release - ${{ env.repository_name }}
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) release generated
      #    path: ${{ env.main_project_module }}/build/outputs/apk/release/

      # Noted For Output [main_project_module]/build/outputs/bundle/release/
      #- name: Upload AAB (App Bundle) Release - ${{ env.repository_name }}
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - App bundle(s) AAB release generated
      #    path: ${{ env.main_project_module }}/build/outputs/bundle/release/
